<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageClassification.API</name>
    </assembly>
    <members>
        <member name="M:ImageClassification.API.Controllers.ClassificationController.Get(System.String)">
            <summary>
            If exists classifier, returns all classifications that classifier can produce.
            </summary>
            <param name="classifier">Name of classifier.</param>
            <returns>Collection of possible classifications.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.ClassificationController.Post(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Defines the category of provided image.
            </summary>
            <param name="classifier">Name of classifier.</param>
            <param name="image">Image file.</param>
            <returns>String as name classification.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.ClassifiersController.Get">
            <summary>
            Enumerate all classifiers are stored.
            </summary>
            <returns>Collection of classifiers' names.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.ClassifiersController.Download(System.String)">
            <summary>
            Downloads a .zip file which represents TensorFlow model of classifier.
            </summary>
            <param name="classifier">Classifier name.</param>
            <returns>Byte array (file) for specified classifier, if exists.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.ClassifiersController.Train(System.String,System.String)">
            <summary>
            Downloads a .zip file which represents TensorFlow model of classifier.
            </summary>
            <param name="imageFolder">Image folder.</param>
            <param name="classifier">Classifier name.</param>
            <returns>Byte array (file) for specified classifier, if exists.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.SourceController.Get(System.String,System.Int32,ImageClassification.API.Enums.ImageParsingStrategy)">
            <summary>
            Gets an image by keyword and index.
            </summary>
            <param name="source">Image parsing strategy.</param>
            <param name="keyword">Keyword for search.</param>
            <param name="index">Index as a position of searching</param>
            <remarks>
            Can be used with a parameter `source` for using specific strategies.
            </remarks>
            <returns>Stream result as <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult">FileStream</see>.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.StorageController.Get">
            <summary>
            Shows all available folders in storage.
            </summary>
            <returns>Collection of <see cref="T:ImageClassification.API.Models.StorageFolderVM">StorageFolderVM</see> with additional info.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.StorageController.Get(System.String)">
            <summary>
            Shows all classification folders and their info for specisfied folder.
            </summary>
            <param name="folder">Folder to search to.</param>
            <returns>Collection of <see cref="T:ImageClassification.API.Models.StorageFolderClassificationVM">StorageFolderClassificationVM</see>.</returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.StorageController.Get(System.String,System.String)">
            <summary>
            Shows information related to the image with indexing.
            </summary>
            <param name="folder"></param>
            <param name="classification"></param>
            <returns></returns>
        </member>
        <member name="M:ImageClassification.API.Controllers.StorageController.Post(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>
            Uploads image to folder for future trainnings.
            </summary>
            <param name="image">Image file.</param>
            <param name="folder">Folder where file should be uploaded. Folder should be a single section.</param>
            <param name="classification">Classification label.</param>
            <returns>Returns file name if everything went well.</returns>
        </member>
        <member name="T:ImageClassification.API.Delegates.ImageParsingResolver">
            <summary>
            Delegate for resolving selection of possible image parsing strategies per request.
            </summary>
            <param name="key">Strategy key.</param>
            <returns>Image parsing strategy.</returns>
        </member>
    </members>
</doc>
